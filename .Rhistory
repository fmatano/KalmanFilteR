geom_line(size = 1, show.legend = FALSE) +
theme_bw() +
labs(x="sample size ", y="time (sec)") +
ggtitle(ifelse(leave_one_out, "Leave-One-Out", "K-Fold")) +
scale_color_manual(values = c(rep('black', 4), 'blue')) +
theme(text = element_text(size=15), legend.justification = c(0, 1),
legend.position = c(0.1, 0.9)) +
ylim(0, max(time_sonia_loo)) +
annotate('text', x = -.8, y = 1.2,
label = "O(n^4) ", parse = TRUE, size=20)
ggplot(time_frame, aes(x = sample_size, y = time_sec, colour = approach,
linetype = type)) +
geom_line(size = 1, show.legend = FALSE) +
theme_bw() +
labs(x="sample size ", y="time (sec)") +
ggtitle(ifelse(leave_one_out, "Leave-One-Out", "K-Fold")) +
scale_color_manual(values = c(rep('black', 4), 'blue')) +
theme(text = element_text(size=15), legend.justification = c(0, 1),
legend.position = c(0.1, 0.9)) +
ylim(0, max(time_sonia_loo)) +
annotate('text', x = -.8, y = 1.2,
label = "O(n^4) ", parse = TRUE, size = 5)
ggplot(time_frame, aes(x = sample_size, y = time_sec, colour = approach,
linetype = type)) +
geom_line(size = 1, show.legend = FALSE) +
theme_bw() +
labs(x="sample size ", y="time (sec)") +
ggtitle(ifelse(leave_one_out, "Leave-One-Out", "K-Fold")) +
scale_color_manual(values = c(rep('black', 4), 'blue')) +
theme(text = element_text(size=15), legend.justification = c(0, 1),
legend.position = c(0.1, 0.9)) +
ylim(0, max(time_sonia_loo)) +
annotate('text', x = 100, y = 40,
label = "O(n^4) ", parse = TRUE, size = 5)
ggplot(time_frame, aes(x = sample_size, y = time_sec, colour = approach)) +
geom_line(size = 1, aes(linetype = type), show.legend = FALSE) +
theme_bw() +
labs(x="sample size ", y="time (sec)") +
ggtitle(ifelse(leave_one_out, "Leave-One-Out", "K-Fold")) +
scale_color_manual(values = c(rep('black', 4), 'blue')) +
theme(text = element_text(size=15), legend.justification = c(0, 1),
legend.position = c(0.1, 0.9)) +
ylim(0, max(time_sonia_loo)) +
annotate('text', x = 100, y = 30,
label = "O(n^4) ", parse = TRUE, size = 5) +
annotate('text', x = 400, y = 10,
label = "O(n^3) ", parse = TRUE, size = 5) +
annotate('text', x = 400, y = 0,
label = "O(n^2) ", parse = TRUE, size = 5)
ggplot(time_frame, aes(x = sample_size, y = time_sec, colour = approach)) +
geom_line(size = 1, aes(linetype = type, show.legend = FALSE)) +
theme_bw() +
labs(x="sample size ", y="time (sec)") +
ggtitle(ifelse(leave_one_out, "Leave-One-Out", "K-Fold")) +
scale_color_manual(values = c(rep('black', 4), 'blue')) +
theme(text = element_text(size=15), legend.justification = c(0, 1),
legend.position = c(0.1, 0.9)) +
ylim(0, max(time_sonia_loo)) +
annotate('text', x = 100, y = 30,
label = "O(n^4) ", parse = TRUE, size = 5) +
annotate('text', x = 400, y = 10,
label = "O(n^3) ", parse = TRUE, size = 5) +
annotate('text', x = 400, y = 0,
label = "O(n^2) ", parse = TRUE, size = 5)
time_frame <- data.frame(time_sec = all_times, sample_size = rep(n_seq, 5),
approach = c(c('short-cut formula', rep('re-inverting', 4)),
each = length(n_seq)) %>% as.factor,
type = c(rep("1", length(n_seq)*2),
rep("2", length(n_seq)*3)))
names(time_frame) <- c('time_sec', 'sample_size', 'approach', "type")
c(c('short-cut formula', rep('re-inverting', 4))
)
time_frame <- data.frame(time_sec = all_times, sample_size = rep(n_seq, 5),
approach = rep(c('short-cut formula', rep('re-inverting', 4)),
each = length(n_seq)) %>% as.factor,
type = c(rep("1", length(n_seq)*2),
rep("2", length(n_seq)*3)))
names(time_frame) <- c('time_sec', 'sample_size', 'approach', "type")
ggplot(time_frame, aes(x = sample_size, y = time_sec, colour = approach)) +
geom_line(size = 1, aes(linetype = type, show.legend = FALSE)) +
theme_bw() +
labs(x="sample size ", y="time (sec)") +
ggtitle(ifelse(leave_one_out, "Leave-One-Out", "K-Fold")) +
scale_color_manual(values = c(rep('black', 4), 'blue')) +
theme(text = element_text(size=15), legend.justification = c(0, 1),
legend.position = c(0.1, 0.9)) +
ylim(0, max(time_sonia_loo)) +
annotate('text', x = 100, y = 30,
label = "O(n^4) ", parse = TRUE, size = 5) +
annotate('text', x = 400, y = 10,
label = "O(n^3) ", parse = TRUE, size = 5) +
annotate('text', x = 400, y = 0,
label = "O(n^2) ", parse = TRUE, size = 5)
time_frame <- data.frame(time_sec = all_times, sample_size = rep(n_seq, 5),
approach = rep(c('short-cut formula', rep('re-inverting', 4)),
each = length(n_seq)) %>% as.factor,
type = c(rep("1", length(n_seq)*2),
rep("2", length(n_seq)*3)))
names(time_frame) <- c('time_sec', 'sample_size', 'approach', "type")
ggplot(time_frame, aes(x = sample_size, y = time_sec, colour = approach)) +
geom_line(size = 1, aes(linetype = type)) +
theme_bw() +
labs(x="sample size ", y="time (sec)") +
ggtitle(ifelse(leave_one_out, "Leave-One-Out", "K-Fold")) +
scale_color_manual(values = c(rep('black', 4), 'blue')) +
theme(text = element_text(size=15), legend.justification = c(0, 1),
legend.position = c(0.1, 0.9)) +
ylim(0, max(time_sonia_loo)) +
annotate('text', x = 100, y = 30,
label = "O(n^4) ", parse = TRUE, size = 5) +
annotate('text', x = 400, y = 10,
label = "O(n^3) ", parse = TRUE, size = 5) +
annotate('text', x = 400, y = 0,
label = "O(n^2) ", parse = TRUE, size = 5)
ggplot(time_frame, aes(x = sample_size, y = time_sec, colour = approach)) +
geom_line(size = 1, aes(linetype = type))
ggplot(time_frame, aes(x = sample_size, y = time_sec)) +
geom_line(size = 1, aes(linetype = type))
plot(n_seq, time_sonia_loo, xlab = 'sample size', y = 'time (sec)', type = 'l',
lwd = 2)
lines(n_seq, time_fra_loo, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t2, lwd = 2, lty = 2)
lines(n_seq, t3, lwd = 2, lty = 2)
lines(n_seq, t4, lwd = 2, lty = 2)
n_seq
n_seq
length(time_sonia_loo)
length(t2)
length(n_seq)
plot(n_seq, time_sonia_loo, xlab = 'sample size', y = 'time (sec)', type = 'l',
lwd = 2)
plot(1:length(n_seq), time_sonia_loo, xlab = 'sample size', y = 'time (sec)', type = 'l',
lwd = 2)
lines(n_seq, time_fra_loo, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t2, lwd = 2, lty = 2)
lines(n_seq, t3, lwd = 2, lty = 2)
lines(n_seq, t4, lwd = 2, lty = 2)
length(n_seq)
length(n_seq)
length(time_sonia_loo)
length(time_fra_loo)
time_sonia_loo
plot(n_seq, time_sonia_loo, xlab = 'sample size', y = 'time (sec)', type = 'l',
lwd = 2)
plot(n_seq, time_sonia_loo, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2)
lines(n_seq, time_fra_loo, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t2, lwd = 2, lty = 2)
lines(n_seq, t3, lwd = 2, lty = 2)
lines(n_seq, t4, lwd = 2, lty = 2)
plot(n_seq, time_sonia_loo, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_loo, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t2, lwd = 2, lty = 2, col = 2)
lines(n_seq, t3, lwd = 2, lty = 2, col = 2)
lines(n_seq, t4, lwd = 2, lty = 2, col = 2)
plot(n_seq, time_sonia_loo, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_loo, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t2, lwd = 2, lty = 2, col = 2)
lines(n_seq, t3, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))))
plot(n_seq, time_sonia_loo, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_loo, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t2, lwd = 2, lty = 2, col = 2)
lines(n_seq, t3, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
y <- log(time_sonia_lko)
lm(y ~ z)
lm(y ~ x)
y
time_sonia_lko
time_fra_lko
y <- log(time_sonia_lko + 0.1)
lm(y ~ x)
t_square <- exp(- 10 + 2*x)
t_cube   <- exp(- 10 + 3*x)
t_fourth <- exp(- 10 + 4*x)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t2, lwd = 2, lty = 2, col = 2)
lines(n_seq, t3, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
t_square <- exp(- 9 + 2*x)
t_cube   <- exp(- 9 + 3*x)
t_fourth <- exp(- 9 + 4*x)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t2, lwd = 2, lty = 2, col = 2)
lines(n_seq, t3, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 9 + 2*x)
t_cube   <- exp(- 9 + 3*x)
t_fourth <- exp(- 9 + 4*x)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
# K - fold
t_square <- exp(- 10 + 2*x)
t_cube   <- exp(- 10 + 3*x)
t_fourth <- exp(- 10 + 4*x)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 5 + 2*x)
t_cube   <- exp(- 5 + 3*x)
t_fourth <- exp(- 5 + 4*x)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t2
t3
t4
plot(n_seq, time_sonia_loo, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_loo, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t2, lwd = 2, lty = 2, col = 2)
lines(n_seq, t3, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 16 + 2*x)
t_cube   <- exp(- 16 + 3*x)
t_fourth <- exp(- 16 + 4*x)
plot(n_seq, time_sonia_loo, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_loo, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_square, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_cube, lwd = 2, lty = 3, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 16 + 2*x)
t_cube   <- exp(- 16 + 3*x)
t_fourth <- exp(- 18 + 4*x)
plot(n_seq, time_sonia_loo, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_loo, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_square, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_cube, lwd = 2, lty = 3, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
time_sonia_lko
y <- time_sonia_lko(4:77)
y <- time_sonia_lko[4:77]
lm(y ~ x[4:77])
# K - fold
t_square <- exp(- 13 + 2*x)
t_cube   <- exp(- 13 + 3*x)
t_fourth <- exp(- 13 + 4*x)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 17 + 2*x)
t_cube   <- exp(- 17 + 3*x)
t_fourth <- exp(- 17 + 4*x)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
# K - fold
t_square <- exp(- 20 + 2*x)
t_cube   <- exp(- 20 + 3*x)
t_fourth <- exp(- 20 + 4*x)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 20 + 2*x)
t_cube   <- exp(- 30 + 3*x)
t_fourth <- exp(- 30 + 4*x)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
# K - fold
t_square <- exp(- 20 + 2*x)
t_cube   <- exp(- 23 + 3*x)
t_fourth <- exp(- 23+ 4*x)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'Leave-One-Out')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'K-Fold')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
time_sonia_lko
time_fra_lko
x <- n_seq[5:77]
y <- time_fra_lko[5:77]
lm(y ~ x)
x <- log(n_seq[5:77])
y <- log(time_fra_lko[5:77])
lm(y ~ x)
y <- log(time_sonia_lko[5:77])
lm(y ~ x)
t_square <- exp(- 18 + 2*x)
t_cube   <- exp(- 18 + 3*x)
t_fourth <- exp(- 18 + 4*x)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'K-Fold')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 18 + 2*n_seq)
t_cube   <- exp(- 18 + 3*n_seq)
t_fourth <- exp(- 18 + 4*n_seq)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'K-Fold')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 18 + 2*n_seq)
t_cube   <- exp(- 20 + 3*n_seq)
t_fourth <- exp(- 18 + 4*n_seq)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'K-Fold')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 21 + 2*n_seq)
t_cube   <- exp(- 21 + 3*n_seq)
t_fourth <- exp(- 21 + 4*n_seq)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'K-Fold')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 18 + 2*n_seq)
t_cube   <- exp(- 18 + 3*n_seq)
t_fourth <- exp(- 18 + 4*n_seq)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'K-Fold')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 20 + 2*x)
t_cube   <- exp(- 30 + 3*x)
t_fourth <- exp(- 30 + 4*x)
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'k-fold')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 18 + 2*log(n_seq))
t_cube   <- exp(- 18 + 3*log(n_seq))
t_fourth <- exp(- 18 + 4*log(n_seq))
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'k-fold')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 20 + 2*log(n_seq))
t_cube   <- exp(- 20 + 3*log(n_seq))
t_fourth <- exp(- 20 + 4*log(n_seq))
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'k-fold')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 22 + 2*log(n_seq))
t_cube   <- exp(- 22 + 3*log(n_seq))
t_fourth <- exp(- 22 + 4*log(n_seq))
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'k-fold')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
t_square <- exp(- 23 + 2*log(n_seq))
t_cube   <- exp(- 23 + 3*log(n_seq))
t_fourth <- exp(- 23 + 4*log(n_seq))
plot(n_seq, time_sonia_lko, xlab = 'sample size', ylab = 'time (sec)', type = 'l',
lwd = 2, main = 'k-fold')
lines(n_seq, time_fra_lko, type = 'l', lwd = 2, col = 'blue')
lines(n_seq, t_cube, lwd = 2, lty = 2, col = 2)
lines(n_seq, t_fourth, lwd = 2, lty = 3, col = 2)
lines(n_seq, t4, lwd = 2, lty = 4, col = 2)
legend('topleft', lty = c(1, 1, 2, 3, 4), col = c('black', 'blue', rep('red', 3)),
lwd = rep(2, 5), legend = c('re-inverting', 'short-cut formula',
expression(O(n^2)), expression(O(n^3)),
expression(O(n^4))), bty = 'n')
devtools::load_all()
devtools::document()
?get_transformed_scdata
devtools::load_all()
devtools::document()
